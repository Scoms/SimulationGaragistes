//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimulationGaragistesDAL.Model
{
    using System;
    using System.Collections.Generic;
    
    public partial class Garagistes
    {
        public Garagistes()
        {
            this.Revisions_Garagistes = new HashSet<Revisions_Garagistes>();
            this.Vacances = new HashSet<Vacances>();
            this.ProchaineDispo = new Creneau();
            this.ProchaineDispo.Jour = 0;
            this.ProchaineDispo.Heure = 1;
            this.IndexVacances = new List<int>();
        }

    
        public int id { get; set; }
        public string nom { get; set; }
        public int franchise_id { get; set; }
    
        public virtual Franchises Franchises { get; set; }
        public virtual ICollection<Revisions_Garagistes> Revisions_Garagistes { get; set; }
        public virtual ICollection<Vacances> Vacances { get; set; }

        //Champ supplémentaire [indexJour,Heure,Durée]
        private List<int> IndexVacances {get;set;}
        private Creneau ProchaineDispo;

        // indexJour, heure
        public class Creneau
        {
            public int Jour { get; set; }
            public int Heure { get; set; }

            internal void maj(int indexJour, int duree, out Creneau debut)
            {
                debut = new Creneau();
                debut.Jour = this.Jour;
                debut.Heure = this.Heure;
                //Si première resa
                if (this.Jour < indexJour)
                {
                    this.Jour = indexJour;
                }
                this.Heure += duree;
                // TEst sur le + que 8
                while(this.Heure > 8)
                {
                    this.Jour++;
                    this.Heure -= 8;
                }
            }
        }

        public Creneau getProchaineDispo()
        {
            return this.ProchaineDispo;
        }

        public void activerVacances(DateTime debutSimu)
        {
            //Vacances du monsieur
            foreach (var item in this.Vacances)
            {
                var dif1 = item.debut.Date - debutSimu.Date;
                var dif2 = item.fin.Date - debutSimu.Date;

                for (int i = dif1.Days; i < dif2.Days; i++)
                {
                    this.IndexVacances.Add(i+1);
                }
            }

            //Jour non travaillés de manière générale

        }

        public bool estEnVacances(int indexJour)
        {
            return this.IndexVacances.Contains(indexJour);
        }

        internal void reserveJour(int indexJour,Révisions revision, out Creneau debut)
        {
            int duree = revision.defaultTime;
            foreach (var item in this.Revisions_Garagistes)
            {
                if (item.revision_id == revision.id)
                {
                    duree = item.duree;
                }
            }
            this.ProchaineDispo.maj(indexJour,duree,out debut);
        }

        public override string ToString()
        {
            return this.nom + "(" + this.Franchises.label + ")";
        }

    }
}
